worker_processes 4;

events { worker_connections 1024; }

http {
    # Act as Load Balancer for 4 nodes
    upstream core-app.local {
        server nginxkestrel_core-app_1:5000;
        server nginxkestrel_core-app_2:5000;
        server nginxkestrel_core-app_3:5000;
        server nginxkestrel_core-app_4:5000;
    }

    # Redirect all HTTP traffic to HTTPS, not yet
    server {
      listen 80;
      # return 301 https://$host$request_uri;
    }
    
    server {
      listen 80 default_server;
      server_name _;

      client_max_body_size 100M;

      location / {
        proxy_pass http://ckan:80/;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Server $host;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header Host $host;
        proxy_cache cache;
        proxy_cache_bypass $cookie_auth_tkt;
        proxy_no_cache $cookie_auth_tkt;
        proxy_cache_valid 30m;
        proxy_cache_key $host$scheme$proxy_host$request_uri;
      }
    }
    
}
